@using Solutions;
@using System.Diagnostics;

<h1>Day @Number</h1>
<div>
    <a href=@TasksLink>Day @Number tasks</a>
</div>
<div>
    <a href=@InputsLink>Day @Number input</a>
</div>
<div>
    <a href=@SourceLink>Source code</a>
</div>

<EditForm Model="@inputModel" OnValidSubmit="@HandleValidSubmit">
    <div>
        <label for="input-area">Please put this day's input here</label>
    </div>
    <div>
        <InputTextArea id="input-area" DisplayName="input-area" @bind-Value="inputModel.Input" />
    </div>
    <button type="submit">Submit</button>
</EditForm>

@if (IsCalculating)
{
    <div>
        <label>Calculating...</label>
    </div>
}
else if (!string.IsNullOrEmpty(calculationTimeMs))
{
    <div>
        <label>Calculation took @calculationTimeMs ms</label>
    </div>
}

@if (!string.IsNullOrEmpty(firstResult))
{
    <MarkupComponent Text="@firstResult" Label="First task" />
}

@if (!string.IsNullOrEmpty(secondResult))
{
    <MarkupComponent Text="@secondResult" Label="Second task" />
}

@code {
    private InputModel inputModel = new();

    [Parameter]
    public ISolution? Solution { get; set; }

    [Parameter]
    public int Number { get; set; }

    public bool IsCalculating { get; set; }

    public string TasksLink => $"https://adventofcode.com/2022/day/{Number}";

    public string InputsLink => $"https://github.com/siarhiej-h/AdventOfCode2022/raw/main/Inputs/day{Number}.txt";

    public string SourceLink => $"https://github.com/siarhiej-h/AdventOfCode2022/raw/main/AoC/Solutions/Day{Number}.cs";

    private string firstResult = string.Empty;
    private string secondResult = string.Empty;
    private string calculationTimeMs = string.Empty;

    private void HandleValidSubmit()
    {
        IsCalculating = true;
        var stopwatch = Stopwatch.StartNew();
        ArgumentNullException.ThrowIfNull(Solution);
        Task.Run(() =>
        {
            (firstResult, secondResult) = Solution.GetResults(inputModel);
            calculationTimeMs = stopwatch.ElapsedMilliseconds.ToString();
            IsCalculating = false;
            StateHasChanged();
        });
    }
}
